To install the Python wrapper for Turbo Parser, please follow the instructions
below. You need to have Cython (at least version 0.19) installed. To install
Cython, type

easy_install cython

You need also to install the Python regex library:

pip install regex

Then run:

./install_wrapper.sh

This should create a file turbo_parser.so in local subfolder build/<something>
(e.g. build/lib.linux-x86_64-2.7). Create a symbolic link to this file in the
python folder:

ln -s build/lib.linux-x86_64-2.7/turboparser.so turboparser.so
ln -s ../libturboparser/libturboparser.so libturboparser.so

To test, open a Python shell and type:

>>> import nlp_pipeline

(You may need to add the library path first, e.g.

export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:<root folder>/deps/local/lib"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:<root folder>/python"

where <root folder> is an absolute path to the folder where TurboParser is
located.)

To be able to use this wrapper, you need a pre-trained tagger and a parser. You
can download these models as follows:

wget http://www.ark.cs.cmu.edu/TurboParser/sample_models/english_proj_tagger.tar.gz
wget http://www.ark.cs.cmu.edu/TurboParser/sample_models/english_proj_parser.tar.gz

Unzip these files and place them in <root folder>/models/english_proj. 
Then, update your nlp_pipeline.config file with the correct paths to your models.
You can do the following test in your Python shell:

>>> import nlp_pipeline
>>> pipe = nlp_pipeline.NLPPipeline()
>>> print pipe.parse_conll('I solved the problem with statistics.', 'EN')

The result should be:

1   I      _      PRP   PRP     _       2       SUB
2   solved _      VBD   VBD     _       0       ROOT
3   the    _      DT    DT      _       4       NMOD
4   problem       _     NN      NN      _       2       OBJ
5   with          _     IN      IN      _       2       VMOD
6   statistics    _     NNS     NNS     _       5       PMOD
7   .             _     .       .       _       2       P
